import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useProject } from "../../state/project";
import WizardNav from "../../components/WizardNav";
import { parseFullAddress } from "../../utils/address";
export default function CustomerForm() {
    const { state, actions } = useProject();
    const c = state.customer;
    const onRawParse = () => {
        const parsed = parseFullAddress(c.adresseRaw);
        actions.applyParsedAddress(parsed);
    };
    // Minimal validation - only basic info required
    const requiredOk = (c.vorname.trim().length > 0 || c.nachname.trim().length > 0) &&
        c.plz.trim().length >= 3 &&
        c.ort.trim().length > 0;
    return (_jsxs("div", { className: "space-y-6", children: [_jsx("h1", { className: "text-xl font-semibold", children: "Kundendaten" }), _jsxs("div", { className: "grid gap-4 sm:grid-cols-2", children: [_jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Anlagentyp" }), _jsxs("select", { className: "w-full rounded border px-3 py-2", value: c.anlagentyp, onChange: (e) => actions.updateCustomer({ anlagentyp: e.target.value }), children: [_jsx("option", { children: "Neuanlage" }), _jsx("option", { children: "Bestandsanlage" })] })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Einspeisetyp" }), _jsxs("select", { className: "w-full rounded border px-3 py-2", value: c.einspeisetyp, onChange: (e) => actions.updateCustomer({ einspeisetyp: e.target.value }), children: [_jsx("option", { children: "Teileinspeisung" }), _jsx("option", { children: "Volleinspeisung" })] })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Kundentyp" }), _jsxs("select", { className: "w-full rounded border px-3 py-2", value: c.kundentyp, onChange: (e) => actions.updateCustomer({ kundentyp: e.target.value }), children: [_jsx("option", { children: "Privat" }), _jsx("option", { children: "Gewerblich" })] })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Anrede" }), _jsxs("select", { className: "w-full rounded border px-3 py-2", value: c.anrede, onChange: (e) => actions.updateCustomer({ anrede: e.target.value }), children: [_jsx("option", { value: "", children: "(keine)" }), _jsx("option", { children: "Herr" }), _jsx("option", { children: "Frau" }), _jsx("option", { children: "Familie" })] })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Titel" }), _jsxs("select", { className: "w-full rounded border px-3 py-2", value: c.titel, onChange: (e) => actions.updateCustomer({ titel: e.target.value }), children: [_jsx("option", { value: "", children: "(kein Titel)" }), _jsx("option", { children: "Dr." }), _jsx("option", { children: "Prof." }), _jsx("option", { children: "Mag." }), _jsx("option", { children: "Ing." })] })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Vorname" }), _jsx("input", { className: "w-full rounded border px-3 py-2", type: "text", value: c.vorname, onChange: (e) => actions.updateCustomer({ vorname: e.target.value }) })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Nachname" }), _jsx("input", { className: "w-full rounded border px-3 py-2", type: "text", value: c.nachname, onChange: (e) => actions.updateCustomer({ nachname: e.target.value }) })] }), _jsxs("label", { className: "block sm:col-span-2", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Komplette Adresse (aus Google Maps einf\u00FCgen)" }), _jsx("textarea", { className: "w-full rounded border px-3 py-2", rows: 3, placeholder: "Adresse aus Google Maps hier einf\u00FCgen...", value: c.adresseRaw, onChange: (e) => actions.updateCustomer({ adresseRaw: e.target.value }) }), _jsx("div", { className: "mt-2", children: _jsx("button", { type: "button", onClick: onRawParse, className: "rounded border bg-white px-3 py-1 text-sm hover:bg-slate-50", children: "Daten aus Adresse \u00FCbernehmen" }) })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Stra\u00DFe" }), _jsx("input", { className: "w-full rounded border px-3 py-2", type: "text", value: c.strasse, onChange: (e) => actions.updateCustomer({ strasse: e.target.value }) })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Hausnummer" }), _jsx("input", { className: "w-full rounded border px-3 py-2", type: "text", value: c.hausnummer, onChange: (e) => actions.updateCustomer({ hausnummer: e.target.value }) })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "PLZ" }), _jsx("input", { className: "w-full rounded border px-3 py-2", type: "text", value: c.plz, onChange: (e) => actions.updateCustomer({ plz: e.target.value }) })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Ort" }), _jsx("input", { className: "w-full rounded border px-3 py-2", type: "text", value: c.ort, onChange: (e) => actions.updateCustomer({ ort: e.target.value }) })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "E-Mail" }), _jsx("input", { className: "w-full rounded border px-3 py-2", type: "email", value: c.email, onChange: (e) => actions.updateCustomer({ email: e.target.value }) })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Telefon (Festnetz)" }), _jsx("input", { className: "w-full rounded border px-3 py-2", type: "tel", value: c.telFest, onChange: (e) => actions.updateCustomer({ telFest: e.target.value }) })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Telefon (Mobil)" }), _jsx("input", { className: "w-full rounded border px-3 py-2", type: "tel", value: c.telMobil, onChange: (e) => actions.updateCustomer({ telMobil: e.target.value }) })] }), _jsxs("label", { className: "block", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Bundesland" }), _jsxs("select", { className: "w-full rounded border px-3 py-2", value: c.bundesland, onChange: (e) => actions.updateCustomer({ bundesland: e.target.value }), children: [_jsx("option", { value: "", children: "--- Bitte w\u00E4hlen ---" }), _jsx("option", { children: "Baden-W\u00FCrttemberg" }), _jsx("option", { children: "Bayern" }), _jsx("option", { children: "Berlin" }), _jsx("option", { children: "Brandenburg" }), _jsx("option", { children: "Bremen" }), _jsx("option", { children: "Hamburg" }), _jsx("option", { children: "Hessen" }), _jsx("option", { children: "Mecklenburg-Vorpommern" }), _jsx("option", { children: "Niedersachsen" }), _jsx("option", { children: "Nordrhein-Westfalen" }), _jsx("option", { children: "Rheinland-Pfalz" }), _jsx("option", { children: "Saarland" }), _jsx("option", { children: "Sachsen" }), _jsx("option", { children: "Sachsen-Anhalt" }), _jsx("option", { children: "Schleswig-Holstein" }), _jsx("option", { children: "Th\u00FCringen" })] })] }), _jsxs("label", { className: "block sm:col-span-2", children: [_jsx("span", { className: "mb-1 block text-sm", children: "Anmerkung zum Kunden" }), _jsx("textarea", { className: "w-full rounded border px-3 py-2", rows: 3, value: c.anmerkung, onChange: (e) => actions.updateCustomer({ anmerkung: e.target.value }) })] })] }), _jsx(WizardNav, { backTo: "/project/mode", nextTo: "/project/demand", disabledNext: !requiredOk, showHome: true })] }));
}
