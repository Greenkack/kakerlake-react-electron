import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useMemo } from "react";
import { useProject } from "../state/project";
import { Link } from "react-router-dom";
import WizardNav from "../components/WizardNav";
import SmartRecommendations from "../components/SmartRecommendations";
import InteractiveCalculator from "../components/InteractiveCalculator";
import { calculatePVSystem } from "../utils/calculations";
import { usePvCalculations } from "../utils/pvCalculations";
import { formatGermanNumber, formatGermanCurrency, formatGermanInteger, formatGermanKWh, formatGermanKWp, formatGermanPercent } from "../utils/germanFormat";
// PrimeReact Components
import { Card } from 'primereact/card';
import { Panel } from 'primereact/panel';
import { Button } from 'primereact/button';
import { Divider } from 'primereact/divider';
import { Tag } from 'primereact/tag';
// PrimeReact Kpi component for displaying KPIs
function Kpi({ label, value, severity = 'info' }) {
    return (_jsxs(Card, { className: "text-center h-full", children: [_jsx("div", { className: "text-2xl font-bold text-primary mb-2", children: value }), _jsx(Tag, { severity: severity, value: label, className: "text-xs" })] }));
}
export default function Results() {
    const { state } = useProject();
    const { mode, customer: c, building, consumption, options } = state;
    const { input, results } = usePvCalculations();
    // Erweiterte Live-Berechnungen basierend auf den echten eingegebenen Daten
    const calculations = useMemo(() => {
        // Berechnungsparameter aus echten Formulardaten zusammenstellen
        const params = {
            // System-Parameter aus Building Data
            systemSize: building.roofArea ? Math.min(building.roofArea * 0.15, 20) : 10, // kWp basierend auf Dachfläche
            modulePower: 440, // Wp
            orientation: building.roofOrientation || "Süd",
            tilt: building.roofTilt || 30,
            location: c.bundesland || "Deutschland",
            // Verbrauchsdaten aus Consumption Analysis
            annualConsumption: consumption.annualKWhHousehold || 4000, // kWh
            daytimeConsumption: consumption.homeOfficeHours ?
                Math.min(0.6, 0.3 + (consumption.homeOfficeHours / 8) * 0.3) : 0.4,
            // Speicher aus Options
            hasBattery: options.battery_interest || false,
            batterySize: options.battery_size_preference === "small" ? 5 :
                options.battery_size_preference === "medium" ? 10 :
                    options.battery_size_preference === "large" ? 15 :
                        options.battery_size_preference === "very_large" ? 20 : 10,
            // Wärmepumpe aus Options
            hasHeatPump: options.hp_interest || false,
            heatingDemand: consumption.annualKWhHeating || 0,
            // Wirtschaftliche Parameter
            electricityPrice: 0.35,
            feedInTariff: 0.08
        };
        return calculatePVSystem(params);
    }, [c.bundesland, building, consumption, options]);
    return (_jsxs("div", { className: "p-4", children: [_jsxs(Card, { className: "mb-4", children: [_jsx("h1", { className: "text-4xl font-bold text-primary mb-3", children: "\uD83D\uDCCA Projektergebnisse" }), _jsx("p", { className: "text-600", children: "Detaillierte Kalkulation basierend auf Ihren Eingaben" })] }), _jsx(Panel, { header: "\u26A1 System-\u00DCbersicht", className: "mb-4", children: _jsxs("div", { className: "grid", children: [_jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsx(Kpi, { label: "Anlagengr\u00F6\u00DFe", value: formatGermanKWp(calculations.finalSystemSize), severity: "info" }) }), _jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsx(Kpi, { label: "Module (440Wp)", value: formatGermanInteger(calculations.moduleCount), severity: "success" }) }), _jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsx(Kpi, { label: "Dachnutzung", value: formatGermanPercent(calculations.roofUtilization), severity: "warning" }) }), _jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsx(Kpi, { label: "Investition", value: formatGermanCurrency(calculations.systemCost, 0), severity: "danger" }) })] }) }), _jsxs(Panel, { header: "\uD83D\uDCC8 Energieertr\u00E4ge", className: "mb-4", children: [_jsxs("div", { className: "grid", children: [_jsx("div", { className: "col-12 md:col-4 p-2", children: _jsx(Kpi, { label: "pro Jahr", value: formatGermanKWh(calculations.annualYield), severity: "success" }) }), _jsx("div", { className: "col-12 md:col-4 p-2", children: _jsx(Kpi, { label: "pro Monat", value: formatGermanKWh(calculations.monthlyYield), severity: "info" }) }), _jsx("div", { className: "col-12 md:col-4 p-2", children: _jsx(Kpi, { label: "pro Tag", value: formatGermanKWh(calculations.dailyYield), severity: "warning" }) })] }), _jsxs("div", { className: "grid", children: [_jsxs("div", { className: "col-12 md:col-6 p-3", children: [_jsx("h4", { className: "font-medium mb-3", children: "\uD83C\uDFE0 Eigenverbrauch" }), _jsxs("div", { className: "flex justify-content-between mb-2", children: [_jsx("span", { children: "Direkt verbraucht:" }), _jsxs("span", { className: "font-medium", children: [calculations.breakdown.directConsumption.toLocaleString('de-DE'), " kWh"] })] }), _jsxs("div", { className: "flex justify-content-between mb-2", children: [_jsx("span", { children: "Aus Speicher:" }), _jsxs("span", { className: "font-medium", children: [calculations.breakdown.fromBattery.toLocaleString('de-DE'), " kWh"] })] }), _jsx(Divider, {}), _jsxs("div", { className: "flex justify-content-between font-bold", children: [_jsxs("span", { children: ["Gesamt (", calculations.selfConsumptionRate.toFixed(1), "%):"] }), _jsxs("span", { children: [calculations.selfConsumption.toLocaleString('de-DE'), " kWh"] })] })] }), _jsxs("div", { className: "col-12 md:col-6 p-3", children: [_jsx("h4", { className: "font-medium mb-3", children: "\uFFFD Netzinteraktion" }), _jsxs("div", { className: "flex justify-content-between mb-2", children: [_jsx("span", { children: "Einspeisung:" }), _jsxs("span", { className: "font-medium", children: [calculations.feedIn.toLocaleString('de-DE'), " kWh"] })] }), _jsxs("div", { className: "flex justify-content-between mb-2", children: [_jsx("span", { children: "Netzbezug:" }), _jsxs("span", { className: "font-medium", children: [calculations.breakdown.fromGrid.toLocaleString('de-DE'), " kWh"] })] }), _jsx(Divider, {}), _jsxs("div", { className: "flex justify-content-between font-bold", children: [_jsx("span", { children: "Autarkie:" }), _jsxs("span", { children: [calculations.autarkyRate?.toFixed(1), "%"] })] })] })] })] }), _jsx(Panel, { header: "\uD83D\uDCB9 Erweiterte Wirtschaftlichkeits-Kennzahlen", className: "mb-4", children: _jsxs("div", { className: "grid", children: [_jsx("div", { className: "col-12 md:col-4 lg:col-3 p-2", children: _jsx(Kpi, { label: "Autarkiegrad", value: formatGermanPercent(results.autarkiegrad_prozent ?? 0) }) }), _jsx("div", { className: "col-12 md:col-4 lg:col-3 p-2", children: _jsx(Kpi, { label: "J\u00E4hrliche Ersparnis", value: formatGermanCurrency(results.jahres_ersparnis_eur ?? 0) }) }), _jsx("div", { className: "col-12 md:col-4 lg:col-3 p-2", children: _jsx(Kpi, { label: "Break-Even (Jahr)", value: results.break_even_jahr ?? "—" }) }), _jsx("div", { className: "col-12 md:col-4 lg:col-3 p-2", children: _jsx(Kpi, { label: "PV-Strompreis", value: formatGermanNumber(results.pv_strompreis_ct_kwh ?? 0, 2) + " ct/kWh" }) }), _jsx("div", { className: "col-12 md:col-4 lg:col-3 p-2", children: _jsx(Kpi, { label: "Speichergrad", value: formatGermanPercent(results.speichergrad_prozent ?? 0) }) }), _jsx("div", { className: "col-12 md:col-4 lg:col-3 p-2", children: _jsx(Kpi, { label: "Notstrom Kapazit\u00E4t / Tag", value: formatGermanNumber(results.notstrom_kapazitaet_kwh_tag ?? 0, 2) + " kWh" }) }), _jsx("div", { className: "col-12 md:col-4 lg:col-3 p-2", children: _jsx(Kpi, { label: "Restwert nach Laufzeit", value: formatGermanCurrency(results.restwert_nach_laufzeit_eur ?? 0) }) }), _jsx("div", { className: "col-12 md:col-4 lg:col-3 p-2", children: _jsx(Kpi, { label: "Inflationsbereinigter Wert (20J)", value: formatGermanCurrency(results.inflationsbereinigter_wert_20a_eur ?? 0) }) }), _jsx("div", { className: "col-12 md:col-4 lg:col-3 p-2", children: _jsx(Kpi, { label: "Lineare AfA / Jahr", value: formatGermanCurrency(results.afa_linear_jahr_eur ?? 0) }) })] }) }), _jsx(Panel, { header: "\uD83D\uDCB0 Wirtschaftlichkeit", className: "mb-4", children: _jsxs("div", { className: "grid", children: [_jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsx(Kpi, { label: "Ersparnis/Jahr", value: `${calculations.annualSavings.toLocaleString('de-DE')} €`, severity: "success" }) }), _jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsx(Kpi, { label: "Jahre Amortisation", value: calculations.paybackTime.toFixed(1), severity: "info" }) }), _jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsx(Kpi, { label: "Gewinn 20 Jahre", value: `${calculations.roi20Years.toLocaleString('de-DE')} €`, severity: "success" }) }), _jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsx(Kpi, { label: "ROI 20 Jahre", value: `${(calculations.roi20Years / calculations.systemCost * 100).toFixed(0)}%`, severity: "warning" }) })] }) }), _jsxs(Panel, { header: "\uD83C\uDF31 Umweltbeitrag", className: "mb-4", children: [_jsxs("div", { className: "grid", children: [_jsx("div", { className: "col-12 md:col-6 p-2", children: _jsx(Kpi, { label: "CO\u2082-Einsparung/Jahr", value: `${calculations.co2SavingsAnnual.toLocaleString('de-DE')} kg`, severity: "success" }) }), _jsx("div", { className: "col-12 md:col-6 p-2", children: _jsx(Kpi, { label: "CO\u2082-Einsparung 20 Jahre", value: `${(calculations.co2Savings20Years / 1000).toFixed(1)} t`, severity: "success" }) })] }), _jsx("div", { className: "mt-4 text-center", children: _jsxs("p", { className: "text-600", children: ["Das entspricht ca. ", _jsxs("strong", { children: [Math.round(calculations.co2SavingsAnnual / 2300), " B\u00E4umen"] }), " pro Jahr oder ", _jsxs("strong", { children: [Math.round(calculations.co2SavingsAnnual / 140), " weniger Autokilometern"] })] }) })] }), _jsx(SmartRecommendations, { data: {
                    totalConsumption: consumption.annualKWhHousehold || 0,
                    electricityPrice: 0.35,
                    potentialSavings: calculations.annualSavings,
                    futureConsumption: (consumption.annualKWhHousehold || 0) * 1.02,
                    hasSignificantIncrease: (consumption.annualKWhHousehold || 0) > 5000,
                    consumptionCategory: consumption.annualKWhHousehold && consumption.annualKWhHousehold > 5000 ? 'hoch' :
                        consumption.annualKWhHousehold && consumption.annualKWhHousehold < 3000 ? 'niedrig' : 'mittel'
                }, buildingData: {
                    roofArea: building.roofArea,
                    roofOrientation: building.roofOrientation,
                    roofTilt: building.roofTilt
                } }), _jsx(InteractiveCalculator, { initialSystemSize: calculations.finalSystemSize, annualConsumption: consumption.annualKWhHousehold || 4000, roofArea: building.roofArea }), _jsx(Panel, { header: "\uD83C\uDFD7\uFE0F Projektbasis", className: "mb-4", children: _jsxs("div", { className: "grid", children: [_jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 block text-sm", children: "Anlagenmodus:" }), _jsx("span", { className: "font-medium", children: mode === "pv" ? "☀️ Photovoltaik" : mode === "hp" ? "🔥 Wärmepumpe" : mode === "both" ? "⚡ PV + Wärmepumpe" : "—" })] }) }), _jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 block text-sm", children: "Anlagentyp:" }), _jsx("span", { className: "font-medium", children: c.anlagentyp })] }) }), _jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 block text-sm", children: "Einspeisetyp:" }), _jsx("span", { className: "font-medium", children: c.einspeisetyp })] }) }), _jsx("div", { className: "col-12 md:col-6 lg:col-3 p-2", children: _jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 block text-sm", children: "Kundentyp:" }), _jsx("span", { className: "font-medium", children: c.kundentyp })] }) })] }) }), _jsx(Panel, { header: "\uD83D\uDC64 Kundendaten", className: "mb-4", children: _jsxs("div", { className: "grid", children: [_jsxs("div", { className: "col-12 md:col-6 p-2", children: [_jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 text-sm", children: "Name:" }), _jsx("span", { className: "font-medium ml-2", children: `${c.titel ? c.titel + " " : ""}${c.anrede ? c.anrede + " " : ""}${c.vorname} ${c.nachname}`.trim() })] }), _jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 text-sm", children: "E-Mail:" }), _jsx("span", { className: "font-medium ml-2", children: c.email || "—" })] }), _jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 text-sm", children: "Telefon (Festnetz):" }), _jsx("span", { className: "font-medium ml-2", children: c.telFest || "—" })] }), _jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 text-sm", children: "Telefon (Mobil):" }), _jsx("span", { className: "font-medium ml-2", children: c.telMobil || "—" })] })] }), _jsxs("div", { className: "col-12 md:col-6 p-2", children: [_jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 text-sm", children: "Stra\u00DFe:" }), _jsxs("span", { className: "font-medium ml-2", children: [c.strasse, " ", c.hausnummer] })] }), _jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 text-sm", children: "Ort:" }), _jsxs("span", { className: "font-medium ml-2", children: [c.plz, " ", c.ort] })] }), _jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 text-sm", children: "Bundesland:" }), _jsx("span", { className: "font-medium ml-2", children: c.bundesland || "—" })] }), c.anmerkung && (_jsxs("div", { className: "mb-2", children: [_jsx("span", { className: "text-500 text-sm", children: "Anmerkung:" }), _jsx("span", { className: "font-medium ml-2", children: c.anmerkung })] }))] })] }) }), _jsx(Panel, { header: "\uD83D\uDE80 N\u00E4chste Schritte", className: "mb-4", children: _jsxs("div", { className: "grid", children: [_jsx("div", { className: "col-12 md:col-4 p-2", children: _jsx(Link, { to: "/pdf", children: _jsx(Button, { label: "\uD83D\uDCC4 PDF generieren", className: "w-full p-3", severity: "secondary" }) }) }), _jsx("div", { className: "col-12 md:col-4 p-2", children: _jsx(Link, { to: "/solar", children: _jsx(Button, { label: "\u2600\uFE0F Detailkalkulation", className: "w-full p-3", severity: "success" }) }) }), _jsx("div", { className: "col-12 md:col-4 p-2", children: _jsx(Link, { to: "/crm", children: _jsx(Button, { label: "\uD83D\uDC65 Kunde speichern", className: "w-full p-3", severity: "info" }) }) })] }) }), _jsx(WizardNav, { backTo: "/project/options", nextTo: undefined, showHome: true })] }));
}
